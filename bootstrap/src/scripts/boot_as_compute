#!/bin/bash

# Copyright 2013-2014 Amazon.com, Inc. or its affiliates. All Rights Reserved.
#
# Licensed under the Amazon Software License (the "License"). You may not use this file except in compliance with the
# License. A copy of the License is located at
#
# http://aws.amazon.com/asl/
#
# or in the "LICENSE.txt" file accompanying this file. This file is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES 
# OR CONDITIONS OF ANY KIND, express or implied. See the License for the specific language governing permissions and
# limitations under the License.

set -x

# Source config
. /opt/cfncluster/cfnconfig
cfn_master=$(echo $cfn_master|cut -d. -f1)

# Source functions
. /opt/cfncluster/scripts/functions.shlib

# Check basic DNS
check_dns_basic || error_exit "Basic DNS checks failed."

# Run preinstall script if defined
run_preinstall

## Non-scheduler specific functions
##

# LVM stripe, format, mount ephemeral drives
setup_ephemeral_drives

# Mount NFS exports
RC=0
echo "$cfn_master:/home /home nfs hard,intr,noatime,vers=3,_netdev 0 0" >> /etc/fstab || RC=1
echo "$cfn_master:${cfn_shared_dir} ${cfn_shared_dir} nfs hard,intr,noatime,vers=3,_netdev 0 0" >> /etc/fstab || RC=1
mkdir -p ${cfn_shared_dir} || RC=1
mount -v /home || RC=1
mount -v ${cfn_shared_dir} || RC=1
if [ $RC -ne 0 ]; then
  error_exit "Failed during during NFS mounts"
fi

#Bind to NIS domain
RC=0
authconfig --enablenis --nisdomain="internal" --nisserver=${cfn_master} --update || RC=1
chkconfig ypbind on || RC=1
chkconfig rpcbind on || RC=1
service rpcbind restart || RC=1
if [ $RC -ne 0 ]; then
  error_exit "Failed during during NIS config"
fi

# Configure ganglia
RC=0
location=`curl --retry 3 --retry-delay 0 --silent --fail http://169.254.169.254/latest/meta-data/placement/availability-zone` || RC=1
cd /etc/ganglia || RC=1
/bin/cp -f /opt/cfncluster/templates/os/gmond.conf.COMPUTE gmond.conf || RC=1
sed -i "s/<master>/${cfn_master}/" gmond.conf || RC=1
sed -i "s/<location>/$location/" gmond.conf || RC=1
chkconfig gmond on || RC=1
service gmond start || RC=1
if [ $RC -ne 0 ]; then
  error_exit "Failed during Ganglia setup"
fi

# Startup nodewatcher
service supervisord restart
supervisorctl status

##
# Run boot as compute for a specific scheduler
RC=0
/opt/cfncluster/scripts/${cfn_scheduler}/boot_as_compute >/var/log/cfncluster.log 2>&1 || RC=1
if [ $RC -ne 0 ]; then
  error_exit "Failed to run boot_as_compute for ${cfn_scheduler}"
fi

# Run postinstall script if defined
run_postinstall

# Notify compute is ready
instance_id_url="http://169.254.169.254/latest/meta-data/instance-id"
instance_id=$(curl --retry 3 --retry-delay 0 --silent --fail ${instance_id_url})

aws --region ${cfn_region} sqs send-message --queue-url ${cfn_sqs_url} --message-body '{"Type" : "Notification", "Message" : "{\"StatusCode\":\"Complete\",\"Description\":\"Succesfully launched '${instance_id}'\",\"Event\":\"cfncluster:COMPUTE_READY\",\"EC2InstanceId\":\"'${instance_id}'\",\"SpotInstance\":\"'${cfn_spot_fleet}'\"}"}'
